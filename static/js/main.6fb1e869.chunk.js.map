{"version":3,"sources":["lib/extensions.js","pages/home/question.js","pages/home/timer.js","pages/home/index.js","serviceWorker.js","index.js","asset/photo/teacher01.png","asset/photo/answer01.png"],"names":["String","prototype","capitalize","this","toLowerCase","replace","x","toUpperCase","y","questions","name","chooses","answer","Timer","state","time","seconds","timer","startTimer","bind","countDown","secs","divisor_for_minutes","divisor_for_seconds","Math","floor","ceil","timeLeftVar","secondsToTime","setState","setInterval","clearInterval","className","m","s","React","Component","App","props","setValue","data","console","log","setOpen","index","opens","findIndex","t","route","timeStart","getHourMinute","tab","length","value","answers","defaultSeconds","socket","emit","setRating","getTab","getOpen","filter","setAnswers","userName","getDateCurrent","today","Date","dd","getDate","padStart","mm","getMonth","yyyy","getFullYear","hh","getHours","getMinutes","ss","getSeconds","ms","getMilliseconds","sendQuestion","refreshList","exportStudent","map","item","dapan","getAnswers","message","code","alert","script","document","createElement","href","encodeURIComponent","download","click","renderList","list","listIncorrect","userOnline","onClick","key","substring","valuestart","moment","duration","difference","subtract","finalTime","hours","minutes","milliseconds","user","Fragment","renderLogin","error","type","ref","id","placeholder","for","login","renderStudent","show","answered","userId","role","sendnewMessage","renderTeacher","Button","width","src","Teacher","alt","Answer01","data-toggle","aria-controls","aria-selected","messages","divisor_for_milliseconds","io","on","response","newMessage","ids","_map","max","date","push","refs","isTeacher","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6fb1e869.chunk.js","sourcesContent":["// eslint-disable-next-line\nString.prototype.capitalize = function () {\n    //return this.charAt(0).toUpperCase() + this.slice(1);\n    return this.toLowerCase().replace(/./,(x)=>x.toUpperCase()).replace(/[^']\\b\\w/g,(y)=>y.toUpperCase());\n}","\nvar questions = [\n    {\n        name: 'Tình cảm, cảm xúc nào không được thể hiện trong bài thơ “Thuật hoài”?',\n        chooses: [\n            'Tự hào về khí thế và sức manh của quân đội thời trần.',\n            'Thẹn vì chưa trả xong nợ công danh.',\n            'Tình yêu nước, tự hào dân tộc.',\n            'Phê phán triều đình phong kiến.'\n        ],\n        answer: 4\n    },\n    {\n        name: 'Nhận định nào không đúng khi nói về tác giả của bài thơ “Thuật hoài”?',\n        chooses: [\n            'Người làng Phù Ủng, huyện Đường hào, nay thuộc Ân Thi, Hưng Yên.',\n            'Là con rể nuôi của Trần Quốc Tuấn.',\n            'Có nhiều công lao trong cuộc kháng chiến chống quân Nguyên.',\n            'Là một nhà quan văn, nên ông thích ngâm thơ đọc sách.'\n        ],\n        answer: 4\n    },\n    {\n        name: 'Từ nào dưới đây trong bài thơ “Thuật hoài” không phải là tên con vật?',\n        chooses: [\n            'Sóc.',\n            'Tì.',\n            'Hổ.',\n            'Ngưu.'\n        ],\n        answer: 1\n    },\n    {\n        name: 'Trong những nhận xét sau đây, nhận xét nào không đúng khi nói về câu thơ thứ hai trong bài “Thuật hoài”?',\n        chooses: [\n            'Tam quân là ba người lính, đồng thời cũng có thể hiểu là ba đạo quân.',\n            'Hình ảnh ba quân nói về quân đội nhưng cũng đồng thời nói về sức mạnh của toàn dân tộc.',\n            'Câu thơ gây ấn tượng mạnh bởi sự kết hợp của hình ảnh khách quan và cảm nhận chủ quan.',\n            'Hình ảnh thơ kết hợp giữa hiện thực và lãng mạn.'\n        ],\n        answer: 1\n    },\n    {\n        name: 'Phạm Ngũ Lão cảm thấy thẹn khi nghe người đời kể chuyện ai?',\n        chooses: [\n            'Lưu Bị.',\n            'Tào Tháo.',\n            'Quan Công.',\n            'Gia Cát Lượng.'\n        ],\n        answer: 4\n    }\n]\n\nexport {questions};","import React from 'react';\n\n\nclass Timer extends React.Component {\n    constructor() {\n      super();\n      this.state = { time: {}, seconds: 15 };\n      this.timer = 0;\n      this.startTimer = this.startTimer.bind(this);\n      this.countDown = this.countDown.bind(this);\n    }\n  \n    secondsToTime(secs){\n      let hours = Math.floor(secs / (60 * 60));\n  \n      let divisor_for_minutes = secs % (60 * 60);\n      let minutes = Math.floor(divisor_for_minutes / 60);\n  \n      let divisor_for_seconds = divisor_for_minutes % 60;\n      let seconds = Math.ceil(divisor_for_seconds);\n  \n      let obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  \n    componentDidMount() {\n      let timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({ time: timeLeftVar });\n      this.startTimer();\n    }\n  \n    startTimer() {\n      if (this.timer == 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  \n    countDown() {\n      // Remove one second, set state so a re-render happens.\n      let seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds,\n      });\n      \n      // Check if we're at zero.\n      if (seconds == 0) { \n        clearInterval(this.timer);\n      }\n    }\n  \n    render() {\n      return(\n        <div className=\"timer\">\n          {/* <button onClick={this.startTimer}>Start</button> */}\n          {this.state.time.m} : {this.state.time.s}\n        </div>\n      );\n    }\n  }\n  \n  export default Timer;","import React from 'react';\nimport $ from 'jquery';\n//import Messages from './message-list';\n//import Input from './input';\nimport _map from 'lodash/map';\nimport io from 'socket.io-client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import Table from 'react-bootstrap/Table';\nimport { Button } from \"react-bootstrap\";\nimport moment from 'moment';\n\nimport './home.css';\nimport './client.css'\nimport '../../lib/extensions';\nimport { questions } from './question';\n//import Login from '../admin/login';\nimport '../admin/login.css';\n\nimport Teacher from '../../asset/photo/teacher01.png';\nimport Answer01 from '../../asset/photo/answer01.png';\n\nimport Timer from './timer';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.defaultSeconds = 10;\n    //Khởi tạo state,\n    this.state = {\n      messages: [], // danh sách tin nhắn\n      user: { id: '', name: '' },// người dùng hiện tại, nếu rỗng sẽ hiển thị form login, có sẽ hiển thị phòng chat\n      userOnline: [], // danh sách người dùng đang online\n      route: 0,\n      opens: [],//[{ route: 0, tab:0, timeStart: '', value: false, answers: [] }], //answers: câu trả lời \n      //timer \n      timer: 15\n    }\n    this.socket = null;\n    //Timer  \n    this.timer = 0;\n\n  }\n\n  setValue = (data) => {\n    console.log('setValue: ', data)\n    this.setState({ ...this.state, ...data })\n  }\n\n  //Mở câu hỏi \n  setOpen = (index) => {\n    //start timer  \n\n    //open question \n    var opens = this.state.opens;\n    var findIndex = opens.findIndex(t => t.route === index);\n    if (findIndex >= 0) {\n      opens[findIndex] = {\n        route: index,\n        timeStart: this.getHourMinute(),\n        tab: (opens && opens.length > 0) ? opens[findIndex].tab : 0,\n        value: (opens && opens.length > 0) ? !opens[findIndex].value : true,\n        answers: (opens && opens.length > 0) ? opens[findIndex].answers : []\n      };\n    }\n    else {\n      opens = [...opens, {\n        route: index,\n        timeStart: this.getHourMinute(),\n        tab: 0,\n        value: true,\n        answers: []\n      }];\n    }\n\n    this.setState({ ...this.state, opens, time: {}, seconds: this.defaultSeconds });\n    console.log('opens: ', opens)\n    this.socket.emit(\"openQuestion\", { opens: opens }); //gửi event về server\n  }\n  setRating = (index) => {\n    var route = this.state.route;\n    var opens = this.state.opens;\n    var findIndex = opens.findIndex(t => t.route === route);\n    if (findIndex >= 0) {\n      opens[findIndex] = {\n        ...opens[findIndex],\n        tab: index,\n      };\n    }\n    else {\n      opens = [...opens, {\n        route: route,\n        timeStart: '',\n        tab: index,\n        value: false,\n        answers: []\n      }];\n    }\n\n    this.setState({ ...this.state, opens });\n    console.log('opens rating: ', opens)\n    this.socket.emit(\"openQuestion\", { opens: opens }); //gửi event về server\n  }\n  getTab = () => {\n    var route = this.state.route;\n    var opens = this.state.opens;\n    var findIndex = opens.findIndex(t => t.route === route);\n    return (findIndex >= 0) ? opens[findIndex].tab : 0;\n  }\n\n  //Kiểm tra câu hỏi đã mở hay chưa \n  getOpen = () => {\n    var opens = this.state.opens;\n    opens = opens.filter(t => t.route === this.state.route);\n    return (opens && opens.length > 0) && opens[0].value;\n  }\n  //Thêm vào học sinh trả lời \n  setAnswers = (data) => {\n    var index = this.state.route;\n    var students = [];\n    var answers = [];\n    //open question \n    var opens = this.state.opens;\n    opens = opens.filter(t => t.route === index);\n    if (opens && opens.length > 0) {\n      answers = opens[0].answers;\n      if (!(answers && answers.length > 0)) {\n        answers = [data];\n      }\n      else {\n        var findIndex = answers.findIndex(t => t.userName === data.userName);\n        if (findIndex < 0) {\n          answers = [...answers, data];\n        }\n        else {\n          answers = [...answers.filter(t => t.userName !== data.userName), data];\n          //answers[findIndex] = data;\n        }\n      }\n      console.log('findIndex: ', findIndex, data, opens);\n    }\n    else {\n      //answers = [data];\n    }\n    console.log('students: ', students, answers);\n\n    opens = [...this.state.opens.filter(t => t.route !== index),\n    {\n      route: index,\n      tab: (opens && opens.length > 0) ? opens[0].tab : 0,\n      timeStart: opens[0].timeStart,\n      value: opens[0].value,\n      answers: answers\n    }]\n\n    this.setState({ ...this.state, opens });\n  }\n\n  //Ngày hiện tại \n  getDateCurrent = () => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = mm + '/' + dd + '/' + yyyy;\n    return today;\n  }\n  //Giờ phút hiện tại \n  getHourMinute = () => {\n    var time = new Date();\n    var hh = String(time.getHours()).padStart(2, '0');\n    var mm = String(time.getMinutes()).padStart(2, '0');\n    var ss = String(time.getSeconds()).padStart(2, '0');\n    var ms = String(time.getMilliseconds()).padStart(2, '0');\n\n    time = hh + ':' + mm + ':' + ss + '.' + ms;\n    console.log('time hour current: ', time)\n    return time;\n  }\n\n  //Thời gian hiện tại \n  secondsToTime(secs) {\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n    let divisor_for_milliseconds = divisor_for_seconds % 60;\n    let milliSeconds = Math.ceil(divisor_for_milliseconds);\n\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds,\n      \"ms\": milliSeconds\n    };\n    return obj;\n  }\n\n  componentDidMount() {\n\n  }\n\n  //Connetct với server nodejs, thông qua socket.io\n  componentWillMount() {\n    console.log('user temp: ', this.state.user)\n    //const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    var connectionOptions = {\n      \"force new connection\": true,\n      \"reconnectionAttempts\": \"Infinity\", //avoid having user reconnect manually in order to prevent dead clients after a server restart\n      \"timeout\": 10000,                  //before connect_error and connect_timeout are emitted.\n      \"transports\": [\"websocket\"]\n    };\n    this.socket = io('https://polar-falls-90130.herokuapp.com/', connectionOptions);\n    // this.socket.on('connect', function () {\n    //   console.log('connected!');\n    //   this.socket.emit('greet', { message: 'Hello Mr.Server!' });\n    // });\n\n    // this.socket.on('respond', function (data) {\n    //   console.log(data);\n    // });\n\n    this.socket.on('newMessage', (response) => { this.newMessage(response) }); //lắng nghe khi có tin nhắn mới\n    this.socket.on('loginFail', (response) => { alert('Tên đã có người sử dụng') }); //login fail\n    this.socket.on('loginSuccess', (response) => {\n      this.setValue({ user: { id: this.socket.id, name: response.user, code: response.code, time: this.getHourMinute() } })\n      if (response.user === \"Admin\" || response.user === \"admin\") { //chỉ có Giáo viên đăng nhập mới load lại câu hỏi.\n        this.setRating(0)\n      }\n    }); //đăng nhập thành công \n    this.socket.on('updateUesrList', (response) => { this.setValue({ userOnline: response }) }); //update lại danh sách người dùng online khi có người đăng nhập hoặc đăng xuất\n    this.socket.on('teacherQuestion', (response) => { this.setValue({ route: response.route }); });\n    this.socket.on('openQuestion', (response) => { this.setValue({ opens: response.opens }); });\n    //lam moi lai danh sach refreshList\n    this.socket.on('refreshList', (response) => {\n      if (!(this.state.user.name === 'Admin' || this.state.user.name === 'admin')) {\n        this.setValue({ user: null })\n      }\n    });\n\n  }\n  //Khi có tin nhắn mới, sẽ push tin nhắn vào state mesgages, và nó sẽ được render ra màn hình\n  newMessage(m) {\n    console.log('get mess: ', m)\n\n    const messages = this.state.messages;\n    let ids = _map(messages, 'id');\n    let max = Math.max(...ids);\n    var data = {\n      id: max + 1,\n      userId: m.user.id,\n      message: m.data,\n      userName: m.user.name,\n      code: m.user.code,\n      date: this.getDateCurrent(),\n      time: this.getHourMinute()\n    };\n    messages.push(data);\n    this.setState({ messages });\n    //dua vao day cau tra loi\n    this.setAnswers(data);\n\n    // let objMessage = $('.messages');\n    // if (objMessage[0].scrollHeight - objMessage[0].scrollTop === objMessage[0].clientHeight) {\n    //   this.setState({ messages });\n    //   objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300); //tạo hiệu ứng cuộn khi có tin nhắn mới\n\n    // } else {\n    //   this.setState({ messages });\n    //   if (m.id === this.state.user) {\n    //     objMessage.animate({ scrollTop: objMessage.prop('scrollHeight') }, 300);\n    //   }\n    // }\n  }\n  //Gửi event socket newMessage với dữ liệu là nội dung tin nhắn và người gửi\n  sendnewMessage(m) {\n    console.log('mess: ', m)\n    // if (m.value) {\n    //   this.socket.emit(\"newMessage\", { data: m.value, user: this.state.user }); //gửi event về server\n    //   m.value = \"\";\n    // }\n    this.socket.emit(\"newMessage\", { data: m, user: this.state.user }); //gửi event về server\n  }\n  //login để định danh người dùng\n  login() {\n    var user = this.refs.name.value.capitalize();\n    var code = this.refs.code.value.capitalize();\n    if (!(user && code)) {\n      this.setState({ error: 'Họ tên và Mã xác nhận không nên để trống!' })\n      return null;\n    }\n    if ((user === 'Admin' || user === 'admin') && code !== '1212p') {\n      this.setState({ error: 'Mật khẩu không chính xác!' })\n      return null;\n    }\n    else if (user.length < 5) {\n      this.setState({ error: 'Họ tên của bạn quá ngắn!' })\n      return null;\n    }\n    var time = this.getHourMinute();\n    this.socket.emit(\"login\", { user, code, time });\n  }\n\n  //gui cau hoi hien tai dang mo\n  sendQuestion = (data) => {\n    console.log('send question', data)\n    this.socket.emit(\"teacherQuestion\", { ...data }); //gửi event về server\n  }\n\n  refreshList = () => {\n    this.socket.emit(\"refreshList\", true); //Làm mới lại toàn bộ danh sách\n  }\n\n  //xuất ds ra file \n  exportStudent = () => {\n    var route = this.state.route + 1;\n    var opens = this.state.opens[route - 1];\n    var timeStart = \"\";\n    var data = \"\";\n    if (opens) {\n      timeStart = opens.timeStart;\n      opens = opens.answers;\n      if (opens && opens.length > 0) {\n        opens.map((item, index) => {\n          var dapan = this.getAnswers(item.message);\n          data += `${index + 1}. ${item.userName} <code: ${item.code}> (${dapan}) - time: ${item.time}\\n`;\n        })\n      }\n    }\n    if (!data) {\n      alert(\"Không có dữ liệu ghi!\");\n      return null;\n    }\n    var title = \"\\n             DANH SÁCH HỌC SINH (CÂU HỎI \" + route + \")\\n\"\n    data = title + \"           (Thời gian bắt đầu: \" + timeStart + \")\\n\\n\" + data;\n    data += \"\\n \\nDanh sách trên sắp xếp theo tiêu chí: Đúng và nhanh nhất.\";\n    let script = document.createElement('a');\n    script.href = \"data:application/octet-stream,\" + encodeURIComponent(data);\n    script.download = `BangXepHang-Cau-Hoi-${route}.txt`;\n    script.click();\n  }\n\n  render() {\n    var { route, opens } = this.state;\n    //var show = opens && opens[route] && this.getOpen();\n    console.log('this.state.user.name<: ', this.state.user)\n    var isTeacher = this.state.user && this.state.user.name === 'Admin';\n    return (\n      <div className=\"app__content\">\n        {/* <div className=\"title_home\"><h2>{`\"Ngòi bút có uy lực hơn cả lưỡi gươm\" - Edward Bulwer-Lytton`}</h2></div> */}\n\n        {/* kiểm tra xem user đã tồn tại hay chưa, nếu tồn tại thì render form chat, chưa thì render form login */}\n        {(this.state.user && this.state.user.id && this.state.user.name) ?\n          (isTeacher ? this.renderTeacher() : this.renderStudent())\n          :\n          <div>\n            {this.renderLogin()}\n            {/* <div className=\"login_form\">{/* form login \n              <input type=\"text\" name=\"name\" ref=\"name\"></input>\n              <input type=\"button\" name=\"\" value=\"Login\" onClick={this.login.bind(this)}></input>\n            </div> */}\n          </div>\n\n        }\n        <div className=\"footer\">(c) Copyright Gs Hoang Anh - facebook.com/gs.anhhoang</div>\n      </div>\n    )\n  }\n\n  getAnswers = (value) => {\n    switch (value) {\n      case 0:\n        return 'A';\n      case 1:\n        return 'B';\n      case 2:\n        return 'C';\n      case 3:\n        return 'D';\n    }\n  }\n\n  renderList = () => {\n    var { opens, route } = this.state;\n    opens = opens.filter(t => t.route === route);\n    if (opens && opens.length > 0) {\n      opens = opens[0];\n    }\n    if (!opens)\n      return null;\n\n    var answer = questions[route].answer;\n    var list = opens.answers;\n    var listIncorrect = [];\n    if (this.getTab() === 1 && list && list.length > 0) {\n      list = list.filter(t => (answer - 1) === t.message);\n      listIncorrect = opens.answers.filter(t => (answer - 1) !== t.message);\n    }\n    console.log('danh sach: ', list, this.state)\n    return <div className=\"student\">\n      <div className=\"clearfix\">{this.getTab() === 1 ? \"Ds đúng: \" : \"Đã tham gia:\"} {this.getTab() === 2 ?\n        this.state.userOnline.length : ((list) ? list.length : 0)}\n        {this.getTab() === 2 && <button onClick={() => this.refreshList()}>Refresh</button>}\n        {this.getTab() === 1 && <span className=\"text-success ml-2 cursor\" onClick={() => this.exportStudent()}>{\"(Tải dánh sách)\"}</span>}\n      </div>\n      <table>\n        {/* <thead>\n          <tr>\n            <th></th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n          </tr>\n        </thead> */}\n        <tbody>\n\n          {(this.getTab() === 2) && this.state.userOnline.map((item, index) => {\n            return (<tr key={index}>\n              <td className=\"w-20\"><div className=\"t-cricle\">{index + 1}</div></td>\n              <td><div className=\"t-cricle-name1 ml-2\">{(item.name === 'Admin' || item.name === 'admin') ? 'Giáo viên' : item.name}</div></td>\n              <td><div className=\"t-cricle-other\">{item.time && item.time.substring(0, 8)}</div></td>\n            </tr>)\n          })}\n          {(this.getTab() < 2 && list && list.length > 0) &&\n            list.map((item, index) => {\n              console.log('item: ', item)\n\n              let valuestart = moment.duration(opens.timeStart, \"HH:mm:ss.SSSS\");\n              let valuestop = moment.duration(item.time, \"HH:mm:ss.SSSS\");\n              let difference = valuestop.subtract(valuestart);\n\n              var finalTime = (difference.hours() + \":\" + difference.minutes() + \":\" + difference.seconds() + \":\" + difference.milliseconds())\n              console.log('final time: ', finalTime)\n              var user = item.user;\n              return (<tr key={index}>\n                <td className=\"w-20\"><div className=\"t-cricle\">{index + 1}</div></td>\n                <td><div className=\"t-cricle-name1 ml-2\">{item.userName}</div></td>\n                {\n                  this.getTab() === 1 && (\n                    <React.Fragment>\n\n                      <td><div className=\"t-cricle-other\">{item.time}</div></td>\n                      <td><div className=\"t-cricle-other font-weight-bold text-success\">{this.getAnswers(item.message)}</div></td>\n                    </React.Fragment>\n                  )\n                }\n                <td><div className=\"t-cricle-other text-primary\">{`${difference.minutes()}:${difference.seconds()}.${difference.milliseconds()}`}</div></td>\n              </tr>)\n            })}\n          {\n            (this.getTab() === 1 && listIncorrect && listIncorrect.length > 0) && (\n              listIncorrect.map((item, index) => {\n                return (<tr key={index}>\n                  <td className=\"w-20\"> </td>\n                  <td><div className=\"t-cricle-name1 ml-2\">{item.userName}</div></td>\n\n                  <React.Fragment>\n                    <td> </td>\n                    <td><div className=\"t-cricle-other font-weight-bold text-success\">{this.getAnswers(item.message)}</div></td>\n                  </React.Fragment>\n\n                  <td className=\"text-danger\">SAI</td>\n                </tr>)\n              }\n              ))\n          }\n        </tbody>\n      </table>\n      {/* <small>Nếu có hs đăng nhập sau thì click tab \"trả lời\"</small> */}\n      {/* {this.state.userOnline.map(item =>\n        <li key={item.id}><span>{item.name}</span></li>\n      )} */}\n    </div>\n  }\n\n  renderLogin = () => {\n    return (<div className={\"container\"}>\n      <div className={\"row\"}>\n        <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n          <div className=\"card card-signin my-5\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title text-center\">Sign In</h5>\n              {this.state.error && <p className=\"text-danger text-center\">{this.state.error}</p>}\n              <div className=\"form-signin\">\n                <div className=\"form-label-group\">\n                  <input type=\"text\" name=\"name\" ref=\"name\" id=\"inputEmail\" className=\"form-control\" placeholder=\"Email address\" />\n                  <label for=\"inputEmail\">Họ và tên</label>\n                </div>\n                <div className=\"form-label-group\">\n                  <input type=\"password\" name=\"code\" ref=\"code\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" />\n                  <label for=\"inputPassword\">Mã xác nhận</label>\n                </div>\n                <div className=\"custom-control custom-checkbox mb-3\">\n                  <input type=\"text\" type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                  <label className=\"custom-control-label\" for=\"customCheck1\">Agree all</label>\n                </div>\n                <div>Chú ý: Mã xác nhận hs tự đặt (và cần nhớ)</div>\n                <button type=\"button\" name=\"\" onClick={this.login.bind(this)} className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Sign in</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>);\n\n  }\n\n  renderStudent = () => {\n    var { route, opens, user } = this.state;\n    var show = opens && opens[route] && this.getOpen();\n\n    var answered = null;\n    if (show) {\n      answered = (opens[route].answers);\n      if (answered && answered.length > 0) {\n        var findIndex = answered.findIndex(t => t.userId === this.state.user.id);\n        if (findIndex >= 0) {\n          answered = this.getAnswers(answered[findIndex].message);\n        }\n      }\n      else { answered = null; }\n    }\n    //console.log('Current user: ', opens[route].answers, answered);\n    return (<div className=\"student-main\">\n      <div className=\"content\">\n        <h3 className=\"text-center text-success\">Câu hỏi số {route + 1}</h3><p>Họ tên:<b> {user.name}</b></p>\n        {\n          (show) ? (\n            <React.Fragment>\n              <div className={\"alert alert-\" + (answered ? \"primary\" : \"danger\")} role=\"alert\">\n                {(answered) ? ('Đáp án đã chọn: ' + answered) : 'Bạn chưa chọn đáp án!'}\n              </div>\n              <div className=\"choices_items\"><button value=\"0\" type=\"button\" className=\"btn btn-primary ml-2\" onClick={() => this.sendnewMessage(0)}>Chọn A</button> <span className=\"ml-3\">{questions[route].chooses[0]}</span></div>\n              <div className=\"choices_items\"><button value=\"1\" type=\"button\" className=\"btn btn-primary ml-2\" onClick={() => this.sendnewMessage(1)}>Chọn B</button> <span className=\"ml-3\">{questions[route].chooses[1]}</span></div>\n              <div className=\"choices_items\"><button value=\"2\" type=\"button\" className=\"btn btn-primary ml-2\" onClick={() => this.sendnewMessage(2)}>Chọn C</button> <span className=\"ml-3\">{questions[route].chooses[2]}</span></div>\n              <div className=\"choices_items\"><button value=\"2\" type=\"button\" className=\"btn btn-primary ml-2\" onClick={() => this.sendnewMessage(3)}>Chọn D</button> <span className=\"ml-3\">{questions[route].chooses[3]}</span></div>\n              <div className=\"timer\">\n                <Timer />\n                Việc thay đổi đáp án sẽ khiến cho thời gian thay đổi\n              </div>\n            </React.Fragment>\n          ) : (\n              <div className=\"bottom_sent clearfix\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  Chờ giáo viên đặt câu hỏi!\n                </div>\n              </div>\n            )\n        }\n      </div></div>)\n  }\n\n  renderTeacher = () => {\n    var { route, opens } = this.state;\n    var show = opens && opens[route] && this.getOpen();\n    console.log('this.getTab(): ', this.getTab())\n    return (<div className=\"chat_window\">\n      <div className=\"question_number\">\n        {\n          questions.map((item, index) => {\n            return (<Button key={index}\n              className={\"btn-circle \" + (route === index ? \"btn-info\" : \"btn-outline-warning\")}\n              onClick={() => this.sendQuestion({ route: index })}>{index + 1}</Button>\n            )\n          })\n        }\n      </div>\n      <div className=\"questions\">\n        <div className={(true) ? \"message right appeared\" : \"message left appeared\"}>\n          <div className=\"avatar\"><img width={80} src={Teacher} alt=\"fireSpot\" /></div>\n          <div className=\"text_wrapper\">\n            <div className=\"text\">{show ? questions[route].name : 'Chào quý thầy cô và các bạn học sinh!'}</div>\n          </div>\n        </div>\n        <div className=\"contents\">\n          <div className={\"choices_group\"}>\n            {\n              (show) ? (\n                <React.Fragment>\n                  <div className=\"choices_items\"><div className=\"d-cricle\">A</div> {questions[route].chooses[0]}</div>\n                  <div className=\"choices_items\"><div className=\"d-cricle\">B</div> {questions[route].chooses[1]}</div>\n                  <div className=\"choices_items\"><div className=\"d-cricle\">C</div> {questions[route].chooses[2]}</div>\n                  <div className=\"choices_items\"><div className=\"d-cricle\">D</div> {questions[route].chooses[3]}</div>\n                  <div className=\"timer\">\n                    <Timer />\n                  </div>\n                </React.Fragment>\n              ) : (\n                  <div className=\"bottom_sent clearfix\">\n\n                    <div className=\"send_message\" onClick={() => this.setOpen(this.state.route)}>\n                      <div className=\"icon\"></div>\n                      <div className=\"text\">BẮT ĐẦU</div>\n                    </div>\n                    <br />\n                    <img width={180} src={Answer01} alt=\"fireSpot\" />\n\n                  </div>\n                )\n            }\n          </div>\n          <div className=\"answers\">\n            {/* danh sách user online */}\n            <div className=\"menu\">\n\n              <ul className=\"user\">\n                <span className=\"user-name\">{this.state.user.name}</span>\n                <p className=\"text-center\">{'BẢNG XẾP HẠNG'}</p>\n                <div className=\"menu_top\">\n                  <nav>\n                    <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                      <a className={\"nav-item nav-link \" + (this.getTab() === 0 ? \"active\" : \"\")} onClick={() => this.setRating(0)} id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Trả lời</a>\n                      <a className={\"nav-item nav-link \" + (this.getTab() === 1 ? \"active\" : \"\")} onClick={() => this.setRating(1)} id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Xếp hạng</a>\n                      <a className={\"nav-item nav-link \" + (this.getTab() === 2 ? \"active\" : \"\")} onClick={() => this.setRating(2)} id=\"nav-contact-tab\" data-toggle=\"tab\" href=\"#nav-contact\" role=\"tab\" aria-controls=\"nav-contact\" aria-selected=\"false\">Tham gia</a>\n                    </div>\n                  </nav>\n                  {/* <Nav fill variant=\"tabs\">\n                    <Nav.Item onClick={() => this.setRating(0)}>\n                      <Nav.Link className={this.getTab() === 0 ? \"active\" : \"\"} eventKey=\"link-0\">Trả lời</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item onClick={() => this.setRating(1)}>\n                      <Nav.Link className={this.getTab() === 1 ? \"active\" : \"\"} eventKey=\"link-1\">Xếp hạng</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item onClick={() => this.setRating(2)}>\n                      <Nav.Link className={this.getTab() === 2 ? \"active\" : \"\"} eventKey=\"link-2\">Tham gia</Nav.Link>\n                    </Nav.Item>\n                  </Nav> */}\n                </div>\n\n              </ul>\n            </div>\n            {this.renderList()}\n          </div>\n        </div>\n      </div>\n\n      {/* danh sách message */}\n      <div className=\"content\">\n\n        <div className=\"bottom_wrapper clearfix\">\n          <div className=\"\">\n            {'Giáo viên: '}<b>Nguyễn Thị Phi</b>{' - Bộ môn: Văn học'}</div></div>\n\n        {/* <Messages user={this.state.user} messages={this.state.messages} typing={this.state.typing} />\n<Input sendMessage={this.sendnewMessage.bind(this)} /> */}\n      </div>\n    </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport App from './pages/home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/teacher01.eae47470.png\";","module.exports = __webpack_public_path__ + \"static/media/answer01.1f746f3a.png\";"],"sourceRoot":""}